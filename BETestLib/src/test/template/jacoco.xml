<?xml version="1.0" encoding="UTF-8"?>

<project name="TIBCO BusinessEvents" default="report" xmlns:jacoco="antlib:org.jacoco.ant">

  <property name="project.home" location="${rootdir}/target" />
  <property name="jacoco.work" location="${project.home}/jacoco" />
  <property name="result.report.dir" location="${jacoco.work}/reports/${project.artifactId}" />
  <property name="result.exec.file.collection" location="${jacoco.work}/data" />
  <property name="result.exec.file.final" location="${result.exec.file.collection}/jacoco-data.exec" />
  <property name="source.folder" location="${jacoco.work}/tmp/${project.build.finalName}" />
  <property name="project.bar.name" value="BETestLib.bar" />

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath path="${rootdir}/target/lib/jacocoant.jar" />
  </taskdef>

  <target name="clean">
    <delete dir="${result.report.dir}" />
  </target>

  <target name="merge">
    <jacoco:merge destfile="${result.exec.file.final}">
      <fileset dir="${result.exec.file.collection}" includes="*.exec"/>
    </jacoco:merge>
  </target>

  <!-- when tcpclient is used, can dump multiple data into the collection folder, and then merge into one for report -->
  <target name="dump">
    <jacoco:dump address="localhost" port="6400" reset="true" append="false" destfile="${result.exec.file.collection}/BETestLib.exec"/>
  </target>

  <target name="report" depends="merge">
    <!-- Extract byte code from ${project.build.finalName}.ear to see source coverage later -->
    <unzip src="${project.home}/${project.build.finalName}.ear" dest="${source.folder}" />
    <unzip src="${source.folder}/${project.bar.name}" dest="${source.folder}" />
    <unzip src="${source.folder}/be.jar" dest="${source.folder}/be" />

    <jacoco:report>
      <executiondata>
        <file file="${result.exec.file.final}" />
      </executiondata>

      <structure name="BETestLib">
        <group name="testservice">
          <group name="Rules" exclude="getSourceText|toString|eval|rightExpHashcode|leftExpHashcode|_getLeftIdentifiers|_getRightIdentifiers|getDependsOn|forwardChain|execute">
            <classfiles>
              <fileset dir="${source.folder}/be">
                <include name="be/gen/testservice/Rules/**/*.class"/>
                <include name="be/gen/testservice/TestScheduler/StartScheduledTest.class"/>
              </fileset>
            </classfiles>
          </group>
          <group name="Functions" exclude="invoke|getSignature|getParameterDescriptors|NeedsStaticInitialization_init">
            <classfiles>
              <fileset dir="${source.folder}/be">
                <include name="be/gen/testservice/RuleFunctions/**/*.class"/>
                <include name="be/gen/testservice/TestScheduler/printTestResult.class"/>
                <include name="be/gen/testservice/TestScheduler/processPreprocTestTrigger.class"/>
                <include name="be/gen/testservice/TestScheduler/scheduleTest.class"/>
                <exclude name="**/*oversizeName.class"/>
                <exclude name="**/null*.class"/>
                <exclude name="**/*$.class"/>
              </fileset>
            </classfiles>
          </group>
        </group>
        <group name="Unit Tests">
          <group name="Rules" exclude="getSourceText|toString|eval|rightExpHashcode|leftExpHashcode|_getLeftIdentifiers|_getRightIdentifiers|getDependsOn|forwardChain|execute">
            <classfiles>
              <fileset dir="${source.folder}/be">
                <include name="be/gen/Rules/**/*.class"/>
              </fileset>
            </classfiles>
          </group>
          <group name="Functions" exclude="invoke|getSignature|getParameterDescriptors|NeedsStaticInitialization_init">
            <classfiles>
              <fileset dir="${source.folder}/be">
                <include name="be/gen/Test/**/*.class"/>
                <include name="be/gen/RuleFunctions/**/*.class"/>
                <exclude name="**/*oversizeName.class"/>
                <exclude name="**/null*.class"/>
                <exclude name="**/*$.class"/>
              </fileset>
            </classfiles>
          </group>
        </group>
      </structure>

      <html destdir="${result.report.dir}" footer="Generated by CICD" />
      <csv destfile="${result.report.dir}/report.csv" />
      <xml destfile="${result.report.dir}/report.xml" />
    </jacoco:report>
  </target>
</project>
